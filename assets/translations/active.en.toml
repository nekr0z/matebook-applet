AppletExit = "Exiting the applet..."
AppletVersion = "matebook-applet version {{.Version}}"
BatteryProtectionOff = "Battery protection is {{.Status}}"
BatteryProtectionStatus = "Battery protection mode: {{.Status}}"
BatteryProtectionStatusError = "ERROR: can not get BP status!"
BatteryProtectionStatusStrange = "{{.Status}}, but thresholds make no sense."
CantReadBattery = "failed to get thresholds"
CantReadBatteryDriver = "Failed to get thresholds from driver interface"
CantReadBatteryMax = "Failed to get max threshold from driver interface"
CantReadBatteryMin = "Failed to get min threshold from driver interface"
CantReadBatteryScript = "Failed to get battery protection status from script"
CantReadFnlock = "could not read Fn-Lock state from driver interface"
CantReadFnlockScript = "Failed to get fnlock status from script"
CantSetBattery = "failed to set thresholds"
CantSetBatteryMax = "Failed to set max threshold"
CantSetBatteryMin = "Failed to set min threshold"
CantSetFnlockDriver = "Could not set Fn-Lock status through driver interface"
CantSetKdblightTimeout = "Failed to set keyboard light timeout"
CantToggleFnlock = "Failed to toggle Fn-Lock"
CantUnderstandBattery = "Can not make sense of driver interface value {{.Value}}"
ChangeValue = "Change"
CustomWindowTitle = "Charging thresholds"
DoCustom = "CUSTOM"
DoHome = "HOME (40%-70%)"
DoOffice = "OFFICE (70%-90%)"
DoSet = "Set"
DoToggle = "Toggle"
DoTravel = "TRAVEL (95%-100%)"
FlagIcon = "path of a custom icon to use"
FlagN = "do not save values"
FlagR = "use fnlock and batpro scripts if all else fails"
FlagS = "save values for persistence (deprecated)"
FlagV = "be verbose"
FlagVV = "be very verbose"
FlagW = "windowed mode"
FlagWait = "wait for driver to set battery thresholds (obsolete)"
FnlockStatus = "Fn-Lock is {{.Status}}"
FnlockStatusError = "ERROR: Fn-Lock state unknown"
FoundBattery = "Found writable battery thresholds endpoint, will use it"
FoundBatteryPers = "Persistence thresholds values endpoint found."
FoundFnlock = "Found writable fnlock endpoint, will use it"
FoundKdblightTimeout = "Found writable kdblight_timeout endpoint, will use it"
GotCustomIcon = "Successfully loaded custom icon from {{.Path}}"
KbdlightTimeoutExplain = "Keyboard light will stay on for this number of seconds when enabled. 0 = forever."
KbdlightTimeoutWindowTitle = "Keyboard Light Timeout"
KdblightTimeoutStatusError = "ERROR: Keyboard light timeout unknown"
KdblightTimeoutStatusOff = "Keyboard light timeout is off"
LookingForBatteryPers = "looking for endpoint to save thresholds to..."
MaxThresholdExplain = "MAX: the battery won't be charged above this level"
MinThresholdExplain = "MIN: the battery won't be charged unless it is lower than this level when AC is plugged"
NoCustomIcon = "Couldn't get custom icon, falling back to default"
NothingToWorkWith = "Neither a supported version of Huawei-WMI driver, nor any of the required scripts are properly installed, see README.md#installation-and-setup for instructions"
OptionSDeprecated = "-s option is deprecated, applet is now saving values for persistence by default"
PreparingTray = "Setting up menu..."
Quit = "Quit"
ReadOnlyDriver = "Driver interface is readable but not writeable."
SetCustom = "Custom"
SetHome = "Home"
SetOff = "Off"
SetOffice = "Office"
SetTravel = "Travel"
StatusCustom = "CUSTOM ({{.Min}}%-{{.Max}}%)"
StatusHome = "HOME"
StatusOff = "OFF"
StatusOffice = "OFFICE"
StatusOn = "ON"
StatusTravel = "TRAVEL"
StrangeFnlock = "Fn-lock state reported by driver doesn't make sense"
StrangeKdblightTimeout = "Keyboard light timeout reported by driver doesn't make sense"
StrangeThresholds = "BP thresholds don't make sense: min {{.Min}}%, max {{.Max}}%"

[KdblightTimeoutStatusOn]
one = "Keyboard light timeout is {{.Timeout}}s."
other = "Keyboard light timeout is {{.Timeout}}s."
